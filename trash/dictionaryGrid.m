function [H,rs,N,Nx,Ny] = dictionaryGrid(f,r,r0,D,xRes,yRes)
%[H,rs,N,Nx,Ny] = dictionaryGrid(f,r,r0,D,xRes,yRes) Obtains the H matrix
% for a sound field at positions given by r, comprised of spherical waves
% generated by point sources placed on a 2D grid. The resolution for the x
% and y axes is given by xRes and yRes in meters. The z coordinate
% corresponds to the center of the array.
%   Input:
%       - f         : frequency (Hz). Nf x 1
%       - r         : point where the dictionary is created. 3 x M
%       - r0        : center of the spherical array. 3 x 1
%       - D         : dimensions of the domain. 1 x 3
%       - xRes      : spatial resolution for x axis in meters. Scalar
%       - yRes      : spatial resolution for y axis in meters. Scalar
%   Output:
%       - H         : dictionary. N x Nf
%       - rs        : position of the point sources. 3 x N
%       - N         : number of point sources. Scalar
%       - Nx        : number of point sources along the x axis. Scalar
%       - Ny        : number of point sources along the y axis. Scalar
%
% Author: Antonio Figueroa Dur√°n
% Date: March 2022

%% ERROR HANDLING
if nargin < 6, error('dictionaryGrid Error: Not enough input parameters.'), end

%% MAIN CODE
c = 343;

% Position of the candidate sources
x = xRes/2:xRes:D(1);
y = yRes/2:yRes:D(2);
z = r0(3);
[X,Y] = meshgrid(x,y);
rs = [X(:) Y(:)];
rs = [rs z*ones(size(rs,1),1)].';

Nx = length(x);
Ny = length(y);
N = Nx*Ny;
M = size(r,2);
Nf = length(f);

% Propagation vector
k = c./(2*pi*f);

% Distance to the candidate sources
d = nan(M,N);
for nn = 1:N
    for mm = 1:M
        d(mm,nn) = vecnorm(rs(:,nn)-r(:,mm));
    end
end

% Dictionary
H = nan(M,N,Nf);
for ff = 1:Nf
    H(:,:,ff) = (1./d).*exp(-1i*d*k(ff));
end

% Normalisation
H = H./vecnorm(H,2,2);

end